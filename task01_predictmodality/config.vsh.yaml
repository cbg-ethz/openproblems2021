functionality:
  name: python_starter_kit
  namespace: predict_modality_starter_kits

  # metadata for your method
  version: dev
  description: A fine method.
  authors:
    - name: Kim Philipp Jablonski
      email: kim.jablonski@bsse.ethz.ch
      roles: [ author, maintainer ]
      props: { github: kpj, orcid: "0000-0002-4166-4343" }
    - name: Pedro Fal√© Ferreira
      email: pedro.ferreira@bsse.ethz.ch
      roles: [ author, maintainer ]
      props: { github: pedrofale, orcid: "0000-0003-0559-6125" }      

  # parameters
  arguments:
    # required inputs
    - name: "--input_train_mod1"
      type: "file"
      example: "dataset_mod1.h5ad"
      description: Censored dataset, training cells.
      required: true
    - name: "--input_test_mod1"
      type: "file"
      example: "dataset_mod1.h5ad"
      description: Censored dataset, test cells.
      required: true
    - name: "--input_train_mod2"
      type: "file"
      example: "dataset_mod2.h5ad"
      description: Censored dataset.
      required: true
    # required outputs
    - name: "--output"
      type: "file"
      direction: "output"
      example: "output.h5ad"
      description: Dataset with predicted values for modality2.
      required: true
    # additional parameters
    - name: "--distance_method"
      type: "string"
      default: "minkowski"
      description: The distance metric to use. Possible values include `euclidean` and `minkowski`.
    - name: "--n_pcs"
      type: "integer"
      default: 50
      description: Number of components to use for dimensionality reduction.
    - name: "--load_method_from_zip"
      type: "boolean_true"
      description: "Whether the ZIP method should be used."
      required: true

  # files your script needs
  resources:
    - type: python_script
      path: script.py

  # resources for unit testing your component
  tests:
    - type: python_script
      path: test.py
    - type: file
      path: sample_data

# target platforms
platforms:

  # By specifying 'docker' platform, viash will build a standalone
  # executable which uses docker in the back end to run your method.
  - type: docker
    # you need to specify a base image that contains at least bash and python
    image: dataintuitive/randpy:py3.8
    # You can specify additional dependencies with 'setup'.
    # See https://viash.io/docs/reference_config/platform-docker/#setup-list
    # for more information on how to add more dependencies.
    setup:
      # - type: apt
      #   packages:
      #     - bash
      # - type: python
      #   packages:
      #     - scanpy
      - type: python
        packages:
          - scikit-learn
          - numpy
          - scipy
          - matplotlib
          - seaborn
          - anndata
          - scanpy
          - torch
          - torchnet
          - torchvision
          - pyro-ppl
          - numba  # Required for umap
          - umap-learn

  # By specifying a 'nextflow', viash will also build a viash module
  # which uses the docker container built above to also be able to
  # run your method as part of a nextflow pipeline.
  - type: nextflow
    labels: [ lowmem, lowtime, lowcpu ]
